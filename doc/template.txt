format: $[command]
example: $[table]
output: my_table

commands:
table = database table name
table.unix = Table name in unix format
table.unix.plural = database table name on plural
table.norm = Table name normalized
table.name = Beautiful name of table
table.name.plural = Beautiful name of table on plural
table.info = Describe the table functionality
table.comment = Comment of table or each comment line wrapped when in loop
table.pk = [deprecated, use primary instead]primary key field name
table.pk.unix = [deprecated]primary key field name as unix name
table.pk.norm = [deprecated]primary key field name normalized
table.pk.gender = [deprecated]primary key gender
table.pk.get = [deprecated]generate a call to a get function that return primary key of table
table.pk.set = [deprecated]generate a call to a set function that adjust primary key of table, need to append ")" at end
	example: $[table.pk.set]value)
table.desc = [deprecated, use descriptor instead]representable field name
table.desc.get = [deprecated]generate a call to a get function that return representable value
table.gender = table gender
table.chars = all word first characters of table name
table.package =  defined package for table
table.inherited =  defined package for table
table.path =  defined path for class file
table.class = [deprecated]class name for the table
table.class.get = [deprecated]generate a call to a static get function to retrieve a instance of class
table.class.get.all = [deprecated]generate a call to a static get function in the selected language to retrieve all rows of table
table.class.file = [deprecated]file name of class
table.if(attribute) = table condition, attributes: comment, inherited, package, path
table.exists(type|attribute) = check if the table contains a field with matching type or attribute
	example: $[table.exists(comment)] = check if table has commentary
table.each = for each comment line
*	example: table.each(index), for each all index including unique and primary
*	example: table.each(unique), for each unique index including primary
*	example: table.each(constraint), for each all constraint
	example: table.each(comment), for each comment line wrapped
*index.name = index name
*index.each(type|attribute) = for each field of index
*unique.name = unique index name
*unique.each(type|attribute) = for each field of unique index
*constraint.name = constraint name
*constraint.each(type|attribute) = for each field of constraint
inherited =  inherited table
primary = primary key field have all field properties, when primary key have only one field
descriptor = main field of table, have all field properties
table.end = end table exists condition or each loop
table.style = css style of table
reference = referenced table by field or constraint, have all table commands
*reference.each(type|attribute) = for each field of referenced constraint table
field = name of table field
field.unix = name of field in unix format
field.norm = name of field normalized
field.name = Beautiful name of table field
field.info = Describe the field functionality
field.comment = Comment of the field or each comment line wrapped when in loop
field.get = [deprecated]generate a call to a get function in the selected language for the field
field.set = [deprecated]generate a call to a set function that adjust field of table, need to append ")" at end
	example: $[field.set]value)
field.content = fill with each field template generated
field.mask = mask informed on model for the field
field.style = css style of field
field.gender = field gender
field.chars = all word first characters of field name
field.size = Size of the field in bytes
*field.length = Length of the string field
field.each = for each field process content
*	example: field.each(primary), for each primary key fields
	example: field.each(reference)
	example: field.each(comment), for each comment line wrapped
	example: field.each(search)
	example: field.each(option), for each option of field(enum items)
	example: field.each(all), for each all table field
field.end = end each loop
field.if(type|attribute) = test if field type or has attributes
	types: reference, primary, repeated, null, default, descriptor, searchable, comment, unique, radio, masked, array, image, integer, bigint, string, text, boolean, currency, double, float, date, datetime, time, enum, blob
	example: field.if(reference)
field.else = when if condition is false (must be the last before field.end)
field.else.if(type|attribute) = when if condition is false and make a test if field type or has attributes
field.end = end if
field.option = enum item value
field.option.unix = enum item value as unix name
field.option.norm = enum item value normalized
field.option.low = first enum item index, start from 0
field.option.high = last enum item index, start from 0
field.option.index = current index of option, start from 0
*field.option.number = current number of option, start from 1
field.option.count = count of enum items
field.image.width = recommended image width
field.image.height = recommended image height
field.image.folder = image folder to upload
field.image.default = default image url
class = class name for the table
class.get = [deprecated]generate a call to a static get function to retrieve a instance of class
class.get.all = [deprecated]generate a call to a static get function in the selected language to retrieve all rows of table
class.file = [deprecated]file name of class

Tip: all command allow case formatting
example: for table category, $[Table.name] outputs: Category
example: for table category, $[table.name] outputs: category
example: for table category, $[TABLE.name] outputs: CATEGORY
example: for table CaTeGoRy, $[tAble.name] outputs: CaTeGoRy